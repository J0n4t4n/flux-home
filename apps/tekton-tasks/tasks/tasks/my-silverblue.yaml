---
apiVersion: tekton.dev/v1beta1
kind: Task
metadata:
  name: buildah-build
  namespace: tekton-tasks
  annotations:
    container.apparmor.security.beta.kubernetes.io/step-build-container: unconfined
    container.apparmor.security.beta.kubernetes.io/step-push-container: unconfined
spec:
  workspaces:
    - name: repo
      mountPath: /git
    - name: dockerconfig
      mountPath: /home/build/.docker
    - name: container
      mountPath: /home/build/.local/share/containers/storage
  params:
    - name: githubRepositoryUrl
      type: string
      description: The URL of the Github Repository
    - name: githubRepositoryName
      type: string
      description: The name of the Github Repository
    - name: githubRef
      type: string
      description: The ref of the current context
    - name: registry
      type: string
      description: The URL of the Registry
    - name: imageName
      type: string
      description: The image name of the resulting container
    - name: imageTag
      type: string
      description: The image tag of the resulting container
  steps:
    - name: git-clone
      image: alpine/git
      script: |
        #!/bin/sh
        git clone $(params.githubRepositoryUrl)
        cd $(params.githubRepositoryName)
        git reset --hard $(params.githubRef)
      securityContext:
        runAsGroup: 1000
        runAsUser: 1000
    - name: build-container
      image: quay.io/buildah/stable:latest
      command: ["buildah"]
      args:
        [
          "build",
          "-t",
          "$(params.registry)/$(params.imageName):$(params.imageTag)",
          "/git/$(params.githubRepositoryName)",
        ]
      resources:
        limits:
          smarter-devices/fuse: "1"
        requests:
          smarter-devices/fuse: "1"
      securityContext:
        runAsGroup: 1000
        runAsUser: 1000
    - name: push-container
      image: quay.io/buildah/stable:latest
      command: ["buildah"]
      args: ["push", "ghcr.io/j0n4t4n/my-silverblue:main"]
      resources:
        limits:
          smarter-devices/fuse: "1"
        requests:
          smarter-devices/fuse: "1"
      securityContext:
        runAsGroup: 1000
        runAsUser: 1000
---
apiVersion: triggers.tekton.dev/v1beta1
kind: TriggerTemplate
metadata:
  name: my-silverblue-template
spec:
  params:
    - name: githubRepositoryUrl
      description: The URL of the Github Repository
    - name: githubRef
      description: The ref of the current context
    - name: githubRepositoryName
      description: The name of the Github Repository
  resourcetemplates:
    - apiVersion: tekton.dev/v1beta1
      kind: TaskRun
      metadata:
        generateName: my-silverblue-run-
        namespace: tekton-tasks
      spec:
        workspaces:
          - name: dockerconfig
            secret:
              secretName: docker-credentials
          - name: repo
            emptyDir: {}
          - name: container
            persistentVolumeClaim:
              claimName: container
        taskRef:
          name: buildah-build
        params:
          - name: githubRepositoryUrl
            value: "$(tt.params.githubRepositoryUrl)"
          - name: githubRepositoryName
            value: "$(tt.params.githubRepositoryName)"
          - name: githubRef
            value: "$(tt.params.githubRef)"
          - name: registry
            value: ghcr.io
          - name: imageName
            value: j0n4t4n/my-silverblue
          - name: imageTag
            value: main
        podTemplate:
          automountServiceAccountToken: false
---
apiVersion: triggers.tekton.dev/v1beta1
kind: TriggerBinding
metadata:
  name: github-binding
spec:
  params:
    - name: githubRef
      value: $(body.head_commit.id)
    - name: githubRepositoryUrl
      value: $(body.repository.clone_url)
    - name: githubRepositoryName
      value: $(body.repository.name)
---
apiVersion: triggers.tekton.dev/v1beta1
kind: Trigger
metadata:
  name: github-trigger
spec:
  interceptors:
    - ref:
        name: "github"
      params:
        - name: "secretRef"
          value:
            secretName: github-secret
            secretKey: secret
        - name: "eventTypes"
          value: ["push"]
    - ref:
        name: "cel"
      params:
        - name: "filter"
          value: body.ref == 'refs/heads/main'
  bindings:
    - ref: github-binding
  template:
    ref: my-silverblue-template
---
apiVersion: triggers.tekton.dev/v1beta1
kind: EventListener
metadata:
  name: github-listener
spec:
  serviceAccountName: tekton-triggers-sa
  triggers:
    - triggerRef: github-trigger
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: github-ingress
  namespace: tekton-tasks
  annotations:
    cert-manager.io/cluster-issuer: letsencrypt-prod
    external-dns.alpha.kubernetes.io/my-target: external
    external-dns.alpha.kubernetes.io/target: dyn.jsteuernagel.de
spec:
  ingressClassName: nginx
  rules:
    - host: tekton-ci.jsteuernagel.de
      http:
        paths:
          - pathType: Prefix
            path: "/hooks"
            backend:
              service:
                name: el-github-listener
                port:
                  number: 8080
  tls:
    - hosts:
        - tekton-ci.jsteuernagel.de
      secretName: tekton-ci-jsteuernagel-de-tls
